{"version":3,"sources":["components/home.js","components/Posts.js","App.js","reportWebVitals.js","index.js"],"names":["Home","props","useState","image","setImage","title","setTitle","description","setDescription","show","setShow","handleClose","Navbar","bg","Container","Brand","href","Toggle","Nav","className","Badge","cUSDBalance","Collapse","Button","onClick","variant","Modal","onHide","centered","Header","closeButton","Title","Form","Body","FloatingLabel","controlId","label","Control","type","onChange","e","target","value","placeholder","as","style","height","Footer","disabled","addPost","Posts","comment","setComment","tipAmmount","setTipAmmount","Row","xs","md","posts","map","post","Col","Card","Stack","direction","gap","index","likes","src","alt","objectFit","Text","like","class","addComment","sendTip","walletAddress","user","comments","c","contractAddress","App","contract","setcontract","address","setAddress","kit","setKit","setcUSDBalance","setPosts","connectToWallet","a","window","celo","enable","web3","Web3","newKitFromWeb3","eth","getAccounts","accounts","user_address","defaultAccount","console","log","alert","getBalance","useCallback","getTotalBalance","balance","USDBalance","cUSD","shiftedBy","toFixed","Contract","celogram","getPosts","methods","getPostsLength","call","postsLength","_posts","Promise","resolve","reject","getPost","push","all","_image","_title","_description","newPost","send","from","_index","likePost","_ammount","cUSDContract","IERC","approve","useEffect","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a1371190.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nimport {\r\n  Button,\r\n  Modal,\r\n  Form,\r\n  FloatingLabel,\r\n  Nav,\r\n  Badge,\r\n  Container,\r\n  Navbar,\r\n} from \"react-bootstrap\";\r\n\r\nconst Home = (props) => {\r\n  const [image, setImage] = useState(\"\");\r\n  const [title, setTitle] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n\r\n  const isFormFilled = () => image && title && description;\r\n\r\n  const [show, setShow] = useState(false);\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  return (\r\n    <>\r\n      <Navbar bg=\"light\">\r\n        <Container>\r\n          <Navbar.Brand href=\"#home\">Celogram</Navbar.Brand>\r\n          <Navbar.Toggle />\r\n          <Nav className=\"me-auto\">\r\n            <Badge bg=\"secondary\" className=\"ms-auto\">\r\n              Balance {props.cUSDBalance}cUSD\r\n            </Badge>\r\n          </Nav>\r\n          <Navbar.Collapse className=\"justify-content-end\">\r\n            <Button onClick={handleShow} variant=\"dark\">\r\n              <h5> Add a New Post </h5>\r\n            </Button>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n\r\n      <Modal show={show} onHide={handleClose} centered>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>New Post</Modal.Title>\r\n        </Modal.Header>\r\n        <Form>\r\n          <Modal.Body>\r\n            <FloatingLabel\r\n              controlId=\"inputImage\"\r\n              label=\"Image\"\r\n              className=\"mb-3\"\r\n            >\r\n              <Form.Control\r\n                type=\"text\"\r\n                onChange={(e) => {\r\n                  setImage(e.target.value);\r\n                }}\r\n                placeholder=\"Image\"\r\n              />\r\n            </FloatingLabel>\r\n\r\n            <FloatingLabel\r\n              controlId=\"inputTitle\"\r\n              label=\"title of post\"\r\n              className=\"mb-3\"\r\n            >\r\n              <Form.Control\r\n                type=\"text\"\r\n                onChange={(e) => {\r\n                  setTitle(e.target.value);\r\n                }}\r\n                placeholder=\"title of post\"\r\n              />\r\n            </FloatingLabel>\r\n\r\n            <FloatingLabel\r\n              controlId=\"inputDescription\"\r\n              label=\"Description\"\r\n              className=\"mb-3\"\r\n            >\r\n              <Form.Control\r\n                as=\"textarea\"\r\n                placeholder=\"description\"\r\n                style={{ height: \"80px\" }}\r\n                onChange={(e) => {\r\n                  setDescription(e.target.value);\r\n                }}\r\n              />\r\n            </FloatingLabel>\r\n          </Modal.Body>\r\n        </Form>\r\n        <Modal.Footer>\r\n          <Button variant=\"outline-secondary\" onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n          <Button\r\n            variant=\"dark\"\r\n            disabled={!isFormFilled()}\r\n            onClick={() => {\r\n              props.addPost(image, title, description);\r\n              handleClose();\r\n            }}\r\n          >\r\n            Add Post\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { Card, Badge, Col, Stack, Button, Row } from \"react-bootstrap\";\r\n\r\nexport const Posts = (props) => {\r\n  const [comment, setComment] = useState(\"\");\r\n  const [tipAmmount, setTipAmmount] = useState(\"\");\r\n  return (\r\n    <Row xs={1} md={3} className=\"g-4\">\r\n      {props.posts.map((post) => (\r\n        <Col key={post.index}>\r\n          <Card className=\"h-100\">\r\n            <Card.Header>\r\n              <Stack direction=\"horizontal\" gap={2}>\r\n                <Badge bg=\"secondary\" className=\"ms-auto\">\r\n                  {post.index} ID\r\n                </Badge>\r\n\r\n                <Badge bg=\"secondary\" className=\"ms-auto\">\r\n                  {post.likes} Likes\r\n                </Badge>\r\n              </Stack>\r\n            </Card.Header>\r\n\r\n            <div className=\" ratio ratio-4x3\">\r\n              <img\r\n                src={post.image}\r\n                alt={post.description}\r\n                style={{ objectFit: \"cover\" }}\r\n              />\r\n            </div>\r\n\r\n            <Card.Body className=\"d-flex  flex-column text-center\">\r\n              <Card.Title>{post.title}</Card.Title>\r\n              <Card.Text className=\"flex-grow-1\">{post.description}</Card.Text>\r\n              <Button\r\n                variant=\"primary mt-2\"\r\n                onClick={() => props.like(post.index)}\r\n              >\r\n                Like this post\r\n              </Button>\r\n\r\n              <form>\r\n                <div class=\"form-r\">\r\n                  <input\r\n                    type=\"text\"\r\n                    class=\"form-control mt-3\"\r\n                    value={comment}\r\n                    onChange={(e) => setComment(e.target.value)}\r\n                    placeholder=\"enter comment\"\r\n                  />\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={() => props.addComment(post.index, comment)}\r\n                    class=\"btn btn-dark mt-1\"\r\n                  >\r\n                    Comment on this post\r\n                  </button>\r\n                </div>\r\n              </form>\r\n\r\n              <form>\r\n                <div class=\"form-r\">\r\n                  <input\r\n                    type=\"number\"\r\n                    class=\"form-control mt-3\"\r\n                    value={tipAmmount}\r\n                    onChange={(e) => setTipAmmount(e.target.value)}\r\n                    placeholder=\"enter ammount\"\r\n                  />\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={() => props.sendTip(post.index, tipAmmount)}\r\n                    class=\"btn btn-dark mt-1\"\r\n                  >\r\n                    Send Tip(cUSD)\r\n                  </button>\r\n                </div>\r\n              </form>\r\n              <h2 className=\"mt-3\">Comments</h2>\r\n              {props.walletAddress === post.user &&\r\n                post.comments.map((c) => (\r\n                  <p class=\"card-text \">\r\n                    {c.description} <hr />\r\n                  </p>\r\n                ))}\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n      ))}\r\n    </Row>\r\n  );\r\n};\r\n","import \"./App.css\";\r\nimport Home from \"./components/home\";\r\nimport { Posts } from \"./components/Posts\";\r\nimport { useState, useEffect, useCallback } from \"react\";\r\nimport Web3 from \"web3\";\r\nimport { newKitFromWeb3 } from \"@celo/contractkit\";\r\nimport celogram from \"./contracts/celogram.abi.json\";\r\nimport IERC from \"./contracts/IERC.abi.json\";\r\n\r\nconst ERC20_DECIMALS = 18;\r\nconst contractAddress = \"0x2d6dcdA3A131Dc4819EF572c6CE5A0c573E7175E\";\r\nconst cUSDContractAddress = \"0x874069Fa1Eb16D44d622F2e0Ca25eeA172369bC1\";\r\n\r\nfunction App() {\r\n  const [contract, setcontract] = useState(null);\r\n  const [address, setAddress] = useState(null);\r\n  const [kit, setKit] = useState(null);\r\n  const [cUSDBalance, setcUSDBalance] = useState(0);\r\n  const [posts, setPosts] = useState([]);\r\n\r\n  const connectToWallet = async () => {\r\n    if (window.celo) {\r\n      try {\r\n        await window.celo.enable();\r\n        const web3 = new Web3(window.celo);\r\n        let kit = newKitFromWeb3(web3);\r\n\r\n        const accounts = await kit.web3.eth.getAccounts();\r\n        const user_address = accounts[0];\r\n        kit.defaultAccount = user_address;\r\n\r\n        await setAddress(user_address);\r\n        await setKit(kit);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    } else {\r\n      alert(\"Error Occurred\");\r\n    }\r\n  };\r\n\r\n  const getBalance = useCallback(async () => {\r\n    try {\r\n      const balance = await kit.getTotalBalance(address);\r\n      const USDBalance = balance.cUSD.shiftedBy(-ERC20_DECIMALS).toFixed(2);\r\n\r\n      const contract = new kit.web3.eth.Contract(celogram, contractAddress);\r\n      setcontract(contract);\r\n      setcUSDBalance(USDBalance);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }, [address, kit]);\r\n\r\n  const getPosts = useCallback(async () => {\r\n    const postsLength = await contract.methods.getPostsLength().call();\r\n    const posts = [];\r\n    for (let index = 0; index < postsLength; index++) {\r\n      let _posts = new Promise(async (resolve, reject) => {\r\n        let post = await contract.methods.getPost(index).call();\r\n\r\n        resolve({\r\n          index: index,\r\n          user: post[0],\r\n          image: post[1],\r\n          title: post[2],\r\n          description: post[3],\r\n          likes: post[4],\r\n          comments: post[5],\r\n        });\r\n      });\r\n      posts.push(_posts);\r\n    }\r\n\r\n    const _posts = await Promise.all(posts);\r\n    setPosts(_posts);\r\n  }, [contract]);\r\n\r\n  const addPost = async (_image, _title, _description) => {\r\n    try {\r\n      await contract.methods\r\n        .newPost(_image, _title, _description)\r\n        .send({ from: address });\r\n      getPosts();\r\n    } catch (error) {\r\n      alert(error);\r\n    }\r\n  };\r\n\r\n  const addComment = async (_index, _description) => {\r\n    try {\r\n      await contract.methods\r\n        .addComment(_index, _description)\r\n        .send({ from: address });\r\n      getPosts();\r\n    } catch (error) {\r\n      alert(error);\r\n    }\r\n  };\r\n\r\n  const likePost = async (_index) => {\r\n    try {\r\n      await contract.methods.likePost(_index).send({ from: address });\r\n      getPosts();\r\n    } catch (error) {\r\n      alert(error);\r\n    }\r\n  };\r\n\r\n  const sendTip = async (_index, _ammount) => {\r\n    try {\r\n      const cUSDContract = new kit.web3.eth.Contract(IERC, cUSDContractAddress);\r\n\r\n      await cUSDContract.methods\r\n        .approve(contractAddress, _ammount)\r\n        .send({ from: address });\r\n      await contract.methods.sendTip(_index, _ammount).send({ from: address });\r\n      getPosts();\r\n      getBalance();\r\n      alert(\"you have successfully sent cusd to this user\");\r\n    } catch (error) {\r\n      alert(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    connectToWallet();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (kit && address) {\r\n      getBalance();\r\n    }\r\n  }, [kit, address, getBalance]);\r\n\r\n  useEffect(() => {\r\n    if (contract) {\r\n      getPosts();\r\n    }\r\n  }, [contract, getPosts]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Home cUSDBalance={cUSDBalance} addPost={addPost} />\r\n      <Posts\r\n        posts={posts}\r\n        likePost={likePost}\r\n        addComment={addComment}\r\n        sendTip={sendTip}\r\n        walletAddress={address}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}